(function(){"use strict";const rBlind={protan:{cpu:.735,cpv:.265,am:1.273463,ayi:-.073894},deutan:{cpu:1.14,cpv:-.14,am:.968437,ayi:.003331},tritan:{cpu:.171,cpv:-.003,am:.062921,ayi:.292119}};const fBlind={Normal:function(v){return v},Protanopia:function(v){return blindMK(v,"protan")},Protanomaly:function(v){return anomylize(v,blindMK(v,"protan"))},Deuteranopia:function(v){return blindMK(v,"deutan")},Deuteranomaly:function(v){return anomylize(v,blindMK(v,"deutan"))},Tritanopia:function(v){return blindMK(v,"tritan")},Tritanomaly:function(v){return anomylize(v,blindMK(v,"tritan"))},Achromatopsia:function(v){return monochrome(v)},Achromatomaly:function(v){return anomylize(v,monochrome(v))}};const powGammaLookup=new Array(256);(function(){let i;for(i=0;i<256;i++){powGammaLookup[i]=(i/255)**2.2}})();function blindMK(rgb,t){const wx=.312713;const wy=.329016;const wz=.358271;const b=rgb[2];const g=rgb[1];const r=rgb[0];const cr=powGammaLookup[r];const cg=powGammaLookup[g];const callback=powGammaLookup[b];const cx=.430574*cr+.34155*cg+.178325*callback;const cy=.222015*cr+.706655*cg+.07133*callback;const cz=.020183*cr+.129553*cg+.93918*callback;const sumXYZ=cx+cy+cz;let cu=0;let cv=0;if(sumXYZ!==0){cu=cx/sumXYZ;cv=cy/sumXYZ}const nx=wx*cy/wy;const nz=wz*cy/wy;let clm;const dy=0;if(cu<rBlind[t].cpu){clm=(rBlind[t].cpv-cv)/(rBlind[t].cpu-cu)}else{clm=(cv-rBlind[t].cpv)/(cu-rBlind[t].cpu)}const clyi=cv-cu*clm;const du=(rBlind[t].ayi-clyi)/(clm-rBlind[t].am);const dv=clm*du+clyi;const sx=du*cy/dv;const sy=cy;const sz=(1-(du+dv))*cy/dv;let sr=3.063218*sx-1.393325*sy-.475802*sz;let sg=-.969243*sx+1.875966*sy+.041555*sz;let sb=.067871*sx-.228834*sy+1.069251*sz;const dx=nx-sx;const dz=nz-sz;const dr=3.063218*dx-1.393325*dy-.475802*dz;const dg=-.969243*dx+1.875966*dy+.041555*dz;const database=.067871*dx-.228834*dy+1.069251*dz;const adjr=dr?((sr<0?0:1)-sr)/dr:0;const adjg=dg?((sg<0?0:1)-sg)/dg:0;const adjb=database?((sb<0?0:1)-sb)/database:0;const adjust=Math.max(adjr>1||adjr<0?0:adjr,adjg>1||adjg<0?0:adjg,adjb>1||adjb<0?0:adjb);sr=sr+adjust*dr;sg=sg+adjust*dg;sb=sb+adjust*database;return[inversePow(sr),inversePow(sg),inversePow(sb)]}function inversePow(v){return 255*(v<=0?0:v>=1?1:v**(1/2.2))}function anomylize(a,b){const v=1.75;const d=Number(v)+1;return[(v*b[0]+Number(a[0]))/d,(v*b[1]+Number(a[1]))/d,(v*b[2]+Number(a[2]))/d]}function monochrome(r){const z=Math.round(r[0]*.299+r[1]*.587+r[2]*.114);return[z,z,z]}function contrast(c0,c1){const offset=.05;const luma0=sRGBRelativeLuminance(c0);const luma1=sRGBRelativeLuminance(c1);return luma0>luma1?(luma0+offset)/(luma1+offset):(luma1+offset)/(luma0+offset)}function sRGBRelativeLuminance(color){const threshold=.03928;const low=x=>x/12.92;const high=x=>((x+.055)/1.055)**2.4;const coefficients=[.2126,.7152,.0722];const colorValues=[color[0],color[1],color[2]];for(let i=0;i<3;i++){colorValues[i]=colorValues[i]/255;colorValues[i]=colorValues[i]<=threshold?low(colorValues[i]):high(colorValues[i])}return colorValues.reduce((accumulator,value,index)=>{accumulator+=coefficients[index]*value;return accumulator},0)}function hexToArray(color){return[parseInt(color.slice(1,3),16),parseInt(color.slice(3,5),16),parseInt(color.slice(5,7),16)]}function arrayToHex(colorArray){const red=`00${colorArray[0].toString(16)}`.slice(-2);const green=`00${colorArray[1].toString(16)}`.slice(-2);const blue=`00${colorArray[2].toString(16)}`.slice(-2);return`#${red}${green}${blue}`}function hexToB64(color){color=hexToArray(color);return btoa(`${String.fromCharCode(color[0])}${String.fromCharCode(color[1])}${String.fromCharCode(color[2])}`)}function b64ToHex(color){const string=atob(color);return arrayToHex([string.charCodeAt(0),string.charCodeAt(1),string.charCodeAt(2)])}const types=[{className:"type-normal",extra:"",longName:"Normal Vision",shortName:"",settable:true},{className:"type-deuteranopia",extra:"red-green color blindness",longName:"Deuteranopia",shortName:"Deuteran"},{className:"type-protanopia",extra:"red-green color blindness",longName:"Protanopia",shortName:"Protan"},{className:"type-tritanopia",extra:"blue-yellow color blindness",longName:"Tritanopia",shortName:"Tritan"},{className:"type-achromat",extra:"total color blindness",longName:"Achromatopsia",shortName:"Achromat"}];const template=document.querySelector("#colorCard");const colors=document.querySelector("#colors");class ColorCard{constructor(element){const card=this;if(!element){colors.append(template.content.cloneNode(true));element=colors.lastElementChild;element.querySelector(".close").addEventListener("click",()=>{element.remove()});this.fixed=false}else{this.fixed=true}Object.defineProperties(this,{_bg:{value:"#ffffff",writable:true},_text:{value:"#000000",writable:true},_cache:{value:{bgInput:element.querySelector(".bg-color"),name:element.querySelector(".color-name"),samples:element.querySelectorAll(".sample-text > div"),textInput:element.querySelector(".text-color")}},element:{value:element}});const bgBaseProperty=`bg${types[0].shortName}`;const bgHiddenProperty=`_${bgBaseProperty}`;const textBaseProperty=`text${types[0].shortName}`;const textHiddenProperty=`_${textBaseProperty}`;for(const type of types){const bgProperty=`bg${type.shortName}`;const textProperty=`text${type.shortName}`;const contrastProperty=`contrast${type.shortName}`;Object.defineProperties(this,{[bgProperty]:{get(){if(type.settable){return this[bgHiddenProperty]}else{return arrayToHex(fBlind[type.longName](hexToArray(this[bgBaseProperty])))}},set(v){if(type.settable&&v!==this[bgHiddenProperty]){this[bgHiddenProperty]=v;this.update()}}},[textProperty]:{get(){if(type.settable){return this[textHiddenProperty]}else{return arrayToHex(fBlind[type.longName](hexToArray(this[textBaseProperty])))}},set(v){if(type.settable&&v!==this[textHiddenProperty]){this[textHiddenProperty]=v;this.update()}}},[contrastProperty]:{get(){return contrast(hexToArray(this[bgProperty]),hexToArray(this[textProperty]))}}})}this._cache.bgInput.addEventListener("change",event=>{card.bg=event.target.value;document.dispatchEvent(new CustomEvent("updateState"))});this._cache.textInput.addEventListener("change",event=>{card.text=event.target.value;document.dispatchEvent(new CustomEvent("updateState"))});this._cache.name.addEventListener("change",()=>{card.element.dispatchEvent(new Event("change"));document.dispatchEvent(new CustomEvent("updateState"))});this.update()}get name(){return this._cache.name.value}set name(v){this._cache.name.value=v}get state(){const bg=hexToB64(this.bg);const text=hexToB64(this.text);const state=`${bg}${text}`.replace(/\//g,"_").replace(/\+/g,"-");return`${state}${this.fixed?"":this.name}`}set state(v){const colors=v.slice(0,8).replace(/_/g,"/").replace(/-/g,"+");this.bg=b64ToHex(colors.slice(0,4));this.text=b64ToHex(colors.slice(4,8));if(!this.fixed){this.name=v.slice(8)}this.update()}remove(){if(!this.fixed){this.element.remove()}}update(){this._cache.bgInput.value=this.bg;this._cache.textInput.value=this.text;for(const element of this._cache.samples){for(const type of types){if(element.matches(`.${type.className}`)){element.style["color"]=this[`text${type.shortName}`];element.style["background-color"]=this[`bg${type.shortName}`];element.innerHTML=`${type.longName}<br />Contrast ratio: ${this[`contrast${type.shortName}`].toPrecision(4)}`;break}}}this.element.dispatchEvent(new Event("change"))}}const targets=document.querySelectorAll("#charts > div.card-columns");const template$1=document.querySelector("#swatchCard");class SwatchCard{constructor(color0,color1){const card=this;const elements=[];for(const target of targets){target.append(template$1.content.cloneNode(true));const element=target.lastElementChild;elements.push(element);element.querySelector(".swatch-0").addEventListener("click",()=>{card.color0.element.scrollIntoView(true)});element.querySelector(".swatch-1").addEventListener("click",()=>{card.color1.element.scrollIntoView(true)})}Object.defineProperties(this,{color0:{value:color0},color1:{value:color1},elements:{value:elements}});for(const type of types){Object.defineProperty(this,`contrast${type.shortName}`,{get(){return contrast(hexToArray(this.color0[`bg${type.shortName}`]),hexToArray(this.color1[`bg${type.shortName}`]))}})}function updateTrigger(){card.update()}this.color0.element.addEventListener("change",updateTrigger);this.color1.element.addEventListener("change",updateTrigger);document.querySelector("#colors").leave(".card",element=>{if(element===this.color0.element||element===this.color1.element){this.color0.element.removeEventListener("change",updateTrigger);this.color1.element.removeEventListener("change",updateTrigger);for(const element of this.elements){element.remove()}}});this.update()}update(){for(const element of this.elements){element.querySelector(".swatch-name").textContent=`${this.color0.name} / ${this.color1.name}`;for(const type of types){if(element.matches(`.${type.className} .card`)){element.querySelector(".swatch-contrast").textContent=`Contrast ratio: ${this[`contrast${type.shortName}`].toPrecision(4)}`;element.querySelector(".swatch-0").style["background-color"]=this.color0[`bg${type.shortName}`];element.querySelector(".swatch-1").style["background-color"]=this.color1[`bg${type.shortName}`];break}}}}}const b64=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","0","1","2","3","4","5","6","7","8","9","-","_"];const settings={init(){this._form=document.querySelector("#settingsForm");this._inputs=this._form.querySelectorAll("input[data-target]");this._modal=document.querySelector("#settingsModal");Object.defineProperties(this,{_showNormal:{value:true,writable:true},_showDeuteranopia:{value:true,writable:true},_showProtanopia:{value:true,writable:true},_showTritanopia:{value:true,writable:true},_showAchromatopsia:{value:false,writable:true}});for(let i=0;i<this._inputs.length;i++){const input=this._inputs[i];const target=input.getAttribute("data-target");if(input.type==="checkbox"){input.checked=this[target]}else{input.value=this[target]}}this.sync();document.querySelector("#saveSettings").addEventListener("click",()=>{settings.sync();$(settings._modal).modal("hide")});$(this._modal).on("hidden.bs.modal",()=>{settings._form.reset()})},get state(){let state=0;state|=this.showNormal?1:0;state|=this.showDeuteranopia?2:0;state|=this.showProtanopia?4:0;state|=this.showTritanopia?8:0;state|=this.showAchromatopsia?16:0;return b64[state]},set state(v){const newState=b64.indexOf(v);if(newState===-1)return;this.showNormal=Boolean(newState&1);this.showDeuteranopia=Boolean(newState&2);this.showProtanopia=Boolean(newState&4);this.showTritanopia=Boolean(newState&8);this.showAchromatopsia=Boolean(newState&16)},get showNormal(){return this._showNormal},set showNormal(v){this._showNormal=Boolean(v);if(this._showNormal){document.documentElement.classList.remove("hide-normal")}else{document.documentElement.classList.add("hide-normal")}},get showDeuteranopia(){return this._showDeuteranopia},set showDeuteranopia(v){this._showDeuteranopia=Boolean(v);if(this._showDeuteranopia){document.documentElement.classList.remove("hide-deuteranopia")}else{document.documentElement.classList.add("hide-deuteranopia")}},get showProtanopia(){return this._showProtanopia},set showProtanopia(v){this._showProtanopia=Boolean(v);if(this._showProtanopia){document.documentElement.classList.remove("hide-protanopia")}else{document.documentElement.classList.add("hide-protanopia")}},get showTritanopia(){return this._showTritanopia},set showTritanopia(v){this._showTritanopia=Boolean(v);if(this._showTritanopia){document.documentElement.classList.remove("hide-tritanopia")}else{document.documentElement.classList.add("hide-tritanopia")}},get showAchromatopsia(){return this._showAchromatopsia},set showAchromatopsia(v){this._showAchromatopsia=Boolean(v);if(this._showAchromatopsia){document.documentElement.classList.remove("hide-achromat")}else{document.documentElement.classList.add("hide-achromat")}},sync(){for(let i=0;i<this._inputs.length;i++){const input=this._inputs[i];const target=input.getAttribute("data-target");if(input.type==="checkbox"){this[target]=input.checked;input.defaultChecked=this[target]}else{this[target]=input.value;input.defaultValue=this[target]}}document.dispatchEvent(new CustomEvent("updateState"))}};function normalize(s){return s.toLowerCase().replace(/ /g,"_")}function generateCSSProperties(items){let ret=":root {\n";const entry=item=>`    --${normalize(item.name)}: ${item.bg};\n    --${normalize(item.name)}-text: ${item.text};\n`;for(const item of items){ret=`${ret}${entry(item)}`}ret=`${ret}}`;return ret}function generateCSSClasses(items){let ret="";const getClass=item=>`.${normalize(item.name)} {\n    background-color: ${item.bg};\n    color: ${item.text};\n}\n`;for(const item of items){ret=`${ret}${getClass(item)}`}return ret}function generateSASS(items){let ret="$colors = (\n";const getEntry=item=>`    ${normalize(item.name)}: ${item.bg},\n    ${normalize(item.name)}-text: ${item.text},\n`;for(const item of items){ret=`${ret}${getEntry(item)}`}ret=`${ret})`;return ret}function generateLESS(items){let ret="";const getEntry=item=>`@${normalize(item.name)}: ${item.bg};\n@${normalize(item.name)}-text: ${item.text};\n`;for(const item of items){ret=`${ret}${getEntry(item)}`}return ret}let colorCards=[];const swatchCards=[];const cache={cssPropertiesCode:document.querySelector("#cssPropsData"),cssClassesCode:document.querySelector("#cssClassesData"),sassCode:document.querySelector("#sassData"),lessCode:document.querySelector("#lessData")};function applyState(){const fragment=window.location.hash.slice(1).split(";");if(fragment.length<=0){settings.state=settings.default}else{settings.state=fragment[0]}for(const card of colorCards){card.remove()}colorCards=[];colorCards.push(new ColorCard(document.querySelector("#baseColors")));if(fragment.length>1){let first=true;for(const state of fragment.slice(1)){if(state==="")continue;if(first){colorCards[0].state=state;first=false}else{const card=new ColorCard;for(const color of colorCards){swatchCards.push(new SwatchCard(card,color))}colorCards.push(card);card.state=state}}}}function escapeHTML(unsafe){return unsafe.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#039;")}settings.init();document.querySelector("#addColor").addEventListener("click",()=>{const card=new ColorCard;for(const color of colorCards){swatchCards.push(new SwatchCard(card,color))}colorCards.push(card);card.element.scrollIntoView(true);document.dispatchEvent(new CustomEvent("updateState"))});document.querySelector("#colors").leave(".card",element=>{let target=null;for(const card of colorCards){if(card.element===element){target=card;break}}if(!target)return true;const index=colorCards.indexOf(target);if(index!==-1)colorCards.splice(index,1);document.dispatchEvent(new CustomEvent("updateState"))});document.querySelector("#charts .type-normal").leave(".card",element=>{let target=null;for(const card of swatchCards){if(card.elements.contains(element)){target=card;break}}if(!target)return true;const index=swatchCards.indexOf(target);if(index!==-1)swatchCards.splice(index,1)});$(document.querySelector("#codeModal")).on("show.bs.modal",()=>{cache.cssPropertiesCode.innerHTML=escapeHTML(generateCSSProperties(colorCards));cache.cssClassesCode.innerHTML=escapeHTML(generateCSSClasses(colorCards));cache.sassCode.innerHTML=escapeHTML(generateSASS(colorCards));cache.lessCode.innerHTML=escapeHTML(generateLESS(colorCards))});document.addEventListener("updateState",()=>{let fragment=`#${settings.state};`;for(const card of colorCards){fragment=`${fragment}${card.state};`}history.pushState(null,"",fragment)});window.addEventListener("popstate",()=>{applyState()});window.addEventListener("hashchange",()=>{applyState()});applyState()})();
//# sourceMappingURL=app.js.map
